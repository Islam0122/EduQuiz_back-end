from django.db import models
from django.db.models.signals import post_save
from django.dispatch import receiver
from io import BytesIO
from django.core.files.base import ContentFile
from xhtml2pdf import pisa
from django.template.loader import render_to_string
from app.quiz.models import Topic
from django.core.mail import EmailMessage
from django.conf import settings


class ResultsTest(models.Model):
    topic = models.ForeignKey(Topic, on_delete=models.CASCADE, related_name='tests', verbose_name='–¢–µ–º–∞')
    name = models.CharField(max_length=255, verbose_name='–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    email = models.EmailField(verbose_name='Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    score = models.PositiveIntegerField(verbose_name='–ù–∞–±—Ä–∞–Ω–Ω—ã–µ –±–∞–ª–ª—ã')
    total_questions = models.PositiveIntegerField(verbose_name='–í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤')
    correct_answers = models.PositiveIntegerField(verbose_name='–ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã')
    wrong_answers = models.PositiveIntegerField(verbose_name='–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã')
    percentage = models.DecimalField(max_digits=5, decimal_places=2, verbose_name='–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤')
    certificate = models.FileField(upload_to='certificates/', blank=True, null=True, verbose_name='–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (PDF)')
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è')

    def __str__(self):
        return f"–¢–µ—Å—Ç –ø–æ —Ç–µ–º–µ '{self.topic.name}' –æ—Ç {self.name} ({self.email})"

    class Meta:
        verbose_name = '–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞'
        verbose_name_plural = '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤'
        ordering = ['-created_at']


@receiver(post_save, sender=ResultsTest)
def generate_certificate_and_send_email(sender, instance, created, **kwargs):
    if created and not instance.certificate:
        context = {
            'name': instance.name,
            'topic': instance.topic.name,
            'percentage': instance.percentage,
            'correct_answers': instance.correct_answers,
            'total_questions': instance.total_questions,
            'date': instance.created_at.strftime('%d-%m-%Y'),
        }
        html_string = render_to_string('certificate_template.html', context)
        pdf_file = BytesIO()
        pisa_status = pisa.CreatePDF(html_string, dest=pdf_file)

        if pisa_status.err:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF")
        pdf_file.seek(0)
        filename = f"certificate_{instance.id}.pdf"
        instance.certificate.save(filename, ContentFile(pdf_file.read()))
        email_subject = '–í–∞—à —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞'

        email_body = f"""
        –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {instance.name}!

        –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤–∞—Å —Å —É—Å–ø–µ—à–Ω—ã–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º —Ç–µ—Å—Ç–∞ –ø–æ —Ç–µ–º–µ "{instance.topic.name}"! üéâ

        –ú—ã —Ä–∞–¥—ã —Å–æ–æ–±—â–∏—Ç—å, —á—Ç–æ –≤–∞—à —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≥–æ—Ç–æ–≤ –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –∫ —ç—Ç–æ–º—É –ø–∏—Å—å–º—É. –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –µ–≥–æ, –Ω–∞–∂–∞–≤ –Ω–∞ —Ñ–∞–π–ª.

        –í–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:
        - –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {instance.correct_answers}
        - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {instance.wrong_answers}
        - –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {instance.percentage}%

        –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞–º.

        –° –Ω–∞–∏–ª—É—á—à–∏–º–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏,
        –ò—Å–ª–∞–º –î—É–π—à–æ–±–∞–µ–≤(duishobaevislam01@gmail.com)
        """

        email = EmailMessage(
            subject=email_subject,
            body=email_body,
            from_email=settings.EMAIL_HOST_USER,
            to=[instance.email],
        )
        email.attach(filename, pdf_file.read(), 'application/pdf')
        email.send()


